name: Build with Emscripten 4.0.15

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  EXAMPLES_ARTIFACT_NAME: example-artifact

jobs:
  build:
    runs-on: ubuntu-24.04
    container:
      image: emscripten/emsdk:4.0.15
    permissions:
      checks: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y ninja-build

      - name: Verify installations
        run: |
          cmake --version
          echo "Ninja $(ninja --version)"
          emcc --version

      - name: Configure CMake
        run: |
          cmake --preset emsdk

      - name: Build project
        run: |
          cmake --build build --config Release -j$(nproc)

      - name: Run tests
        run: |
          node build/test/src/Release/tests.js -r junit > tests.xml
          node build/test/single_header/Release/single_header_test.js -r junit > single_header.xml
          node build/test/benchmark/Release/benchmarks.js -r junit > benchmarks.xml

      - name: Publish test results
        uses: mikepenz/action-junit-report@v5
        if: ${{ !cancelled() }}
        with:
          report_paths: "*.xml"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: "*.xml"
          retention-days: 7

      - name: Upload examples
        if: ${{ !cancelled() && github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXAMPLES_ARTIFACT_NAME }}
          path: build/examples/Release/

  build-coverage:
    runs-on: ubuntu-24.04
    container:
      image: emscripten/emsdk:4.0.15
    permissions:
      pull-requests: write
      id-token: write
    outputs:
      coverage: ${{ steps.coverage-report.outputs.total-coverage }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y ninja-build lcov gpg

      - name: Verify installations
        run: |
          cmake --version
          echo "Ninja $(ninja --version)"
          emcc --version
          lcov --version

      - name: Configure CMake with coverage
        run: |
          cmake --preset coverage

      - name: Build project with coverage
        run: |
          cmake --build build/coverage -j$(nproc)

      - name: Run tests with coverage
        run: |
          node build/coverage/test/src/tests.js

      - name: Generate coverage data
        if: ${{ !cancelled() }}
        run: |
          lcov -b . -d build/coverage/src/CMakeFiles/wasm-dom.dir/wasm-dom/ -c -o lcov.info --gcov-tool `pwd`/coverage/llvm-gcov --no-external

      - name: Report code coverage
        id: coverage-report
        if: ${{ !cancelled() }}
        uses: zgosalvez/github-actions-report-lcov@v4
        with:
          coverage-files: lcov.info
          minimum-coverage: 100
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true

  deploy:
    runs-on: ubuntu-24.04
    needs: [build, build-coverage]
    if: ${{ !cancelled() && github.ref == 'refs/heads/main' }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download examples
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.EXAMPLES_ARTIFACT_NAME }}
          path: pages/

      - name: Generate coverage badge
        run: |
          echo "{ \"coverage\": \"${{ needs.build-coverage.outputs.coverage }}\" }" > pages/coverage-badge.json

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
